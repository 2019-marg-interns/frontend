'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onlyWhen;

var _lodash = require('lodash.isfunction');

var _lodash2 = _interopRequireDefault(_lodash);

var _isDefined = require('../util/isDefined.js');

var _isDefined2 = _interopRequireDefault(_isDefined);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function onlyWhen(predicate) {
  if (!(0, _lodash2.default)(predicate)) {
    throw new Error('predicate must be a function.');
  }

  var message = (0, _lodash2.default)(arguments.length <= 1 ? undefined : arguments[1]) ? predicate.toString() : arguments.length <= 1 ? undefined : arguments[1];
  var propType = (0, _lodash2.default)(arguments.length <= 1 ? undefined : arguments[1]) ? arguments.length <= 1 ? undefined : arguments[1] : arguments.length <= 2 ? undefined : arguments[2];

  if (!(0, _lodash2.default)(propType)) {
    throw new Error('Invalid propType passed to \'onlyWhen\': ' + propType + '.');
  }

  return function (propValue, key, componentName, location, propFullName) {
    if (predicate(propValue)) {
      return propType(propValue, key, componentName, location, propFullName);
    }

    if ((0, _isDefined2.default)(propValue[key])) {
      return new Error('Prop \'' + key + '\' is only used by \'' + componentName + '\' when ' + message + '.');
    }
    return null;
  };
}