'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _elementType = require('react-prop-types/lib/elementType');

var _elementType2 = _interopRequireDefault(_elementType);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _lodash = require('lodash.isfunction');

var _lodash2 = _interopRequireDefault(_lodash);

var _ListItemAction = require('./ListItemAction.js');

var _ListItemAction2 = _interopRequireDefault(_ListItemAction);

var _fabricComponent = require('../fabricComponent');

var _fabricComponent2 = _interopRequireDefault(_fabricComponent);

var _ListItem = require('./ListItem.scss');

var _ListItem2 = _interopRequireDefault(_ListItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var handleSelectionTargetClick = function handleSelectionTargetClick(onChange, checked) {
  return (0, _lodash2.default)(onChange) ? onChange.bind(null, !checked) : undefined;
};

var ListItem = function ListItem(_ref) {
  var _cx;

  var checked = _ref.checked;
  var children = _ref.children;
  var Component = _ref.componentClass;
  var image = _ref.image;
  var itemIcon = _ref.itemIcon;
  var metaText = _ref.metaText;
  var onChange = _ref.onChange;
  var primaryText = _ref.primaryText;
  var secondaryText = _ref.secondaryText;
  var selectable = _ref.selectable;
  var tertiaryText = _ref.tertiaryText;
  var type = _ref.type;
  var props = (0, _objectWithoutProperties3.default)(_ref, ['checked', 'children', 'componentClass', 'image', 'itemIcon', 'metaText', 'onChange', 'primaryText', 'secondaryText', 'selectable', 'tertiaryText', 'type']);
  return _react2.default.createElement(
    Component,
    (0, _extends3.default)({ 'data-fabric': 'ListItem'
    }, props, {
      styleName: (0, _classnames2.default)('ms-ListItem', (_cx = {}, (0, _defineProperty3.default)(_cx, 'ms-ListItem--' + type, !!type), (0, _defineProperty3.default)(_cx, 'is-selectable', selectable), (0, _defineProperty3.default)(_cx, 'is-selected', !!checked), _cx)) }),
    image && _react2.default.createElement(
      'div',
      { styleName: 'ms-ListItem-image' },
      image
    ),
    primaryText && _react2.default.createElement(
      'span',
      { styleName: 'ms-ListItem-primaryText' },
      primaryText
    ),
    secondaryText && _react2.default.createElement(
      'span',
      { styleName: 'ms-ListItem-secondaryText' },
      secondaryText
    ),
    tertiaryText && _react2.default.createElement(
      'span',
      { styleName: 'ms-ListItem-tertiaryText' },
      tertiaryText
    ),
    metaText && _react2.default.createElement(
      'span',
      { styleName: 'ms-ListItem-metaText' },
      metaText
    ),
    itemIcon && _react2.default.createElement(
      'div',
      { styleName: 'ms-ListItem-itemIcon' },
      itemIcon
    ),
    selectable && _react2.default.createElement('div', { styleName: 'ms-ListItem-selectionTarget',
      onClick: handleSelectionTargetClick(onChange, checked) }),
    children && _react2.default.Children.count(children) > 0 && _react2.default.createElement(
      'div',
      { styleName: 'ms-ListItem-actions' },
      children
    )
  );
};
ListItem.displayName = 'ListItem';
ListItem.propTypes = {
  children: _react2.default.PropTypes.node,
  // TODO Array of ListItemActions
  // children: React.PropTypes.oneOfType([
  //   React.PropTypes.instanceOf(ListItemAction),
  //   React.PropTypes.arrayOf(React.PropTypes.instanceOf(ListItemAction))
  // ]),
  componentClass: _elementType2.default,
  image: _react2.default.PropTypes.node,
  itemIcon: _react2.default.PropTypes.node,
  metaText: _react2.default.PropTypes.node,
  onChange: _react2.default.PropTypes.func,
  primaryText: _react2.default.PropTypes.node,
  secondaryText: _react2.default.PropTypes.node,
  selectable: _react2.default.PropTypes.bool,
  checked: _react2.default.PropTypes.bool,
  tertiaryText: _react2.default.PropTypes.node,
  type: _react2.default.PropTypes.oneOf(['document'])
};
ListItem.defaultProps = {
  componentClass: 'li'
};

ListItem.Action = _ListItemAction2.default;

exports.default = (0, _fabricComponent2.default)(ListItem, _ListItem2.default);