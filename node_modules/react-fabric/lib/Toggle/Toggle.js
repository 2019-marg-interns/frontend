'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Label = require('../Label');

var _Label2 = _interopRequireDefault(_Label);

var _fabricComponent = require('../fabricComponent');

var _fabricComponent2 = _interopRequireDefault(_fabricComponent);

var _invokeWhenNotDisabled = require('../util/invokeWhenNotDisabled.js');

var _invokeWhenNotDisabled2 = _interopRequireDefault(_invokeWhenNotDisabled);

var _isDefined = require('../util/isDefined.js');

var _isDefined2 = _interopRequireDefault(_isDefined);

var _Toggle = require('./Toggle.scss');

var _Toggle2 = _interopRequireDefault(_Toggle);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Toggle = function Toggle(_ref) {
  var checked = _ref.checked;
  var className = _ref.className;
  var description = _ref.description;
  var disabled = _ref.disabled;
  var id = _ref.id;
  var labelOff = _ref.labelOff;
  var labelOn = _ref.labelOn;
  var name = _ref.name;
  var onChange = _ref.onChange;
  var textLeft = _ref.textLeft;
  var props = (0, _objectWithoutProperties3.default)(_ref, ['checked', 'className', 'description', 'disabled', 'id', 'labelOff', 'labelOn', 'name', 'onChange', 'textLeft']);

  var inputId = 'Toggle_' + (id || name || Date.now()) + '_input';
  var styleName = (0, _classnames2.default)('ms-Toggle', {
    'is-disabled': disabled,
    'ms-Toggle--textLeft': textLeft
  });
  return _react2.default.createElement(
    'div',
    { 'data-fabric': 'Toggle',
      id: id,
      className: className,
      styleName: styleName },
    description && _react2.default.createElement(
      'span',
      { styleName: 'ms-Toggle-description' },
      description
    ),
    _react2.default.createElement('input', (0, _extends3.default)({}, props, { type: 'checkbox',
      styleName: 'ms-Toggle-input',
      name: name,
      id: inputId,
      checked: (0, _isDefined2.default)(checked) ? checked : false,
      onChange: (0, _invokeWhenNotDisabled2.default)(disabled, onChange) })),
    _react2.default.createElement(
      'label',
      { styleName: 'ms-Toggle-field', htmlFor: inputId },
      _react2.default.createElement(
        _Label2.default,
        { styleName: 'ms-Label ms-Label--off',
          componentClass: 'span' },
        labelOff
      ),
      _react2.default.createElement(
        _Label2.default,
        { styleName: 'ms-Label ms-Label--on',
          componentClass: 'span' },
        labelOn
      )
    )
  );
};
Toggle.displayName = 'Toggle';
Toggle.propTypes = {
  checked: _react2.default.PropTypes.bool,
  className: _react2.default.PropTypes.string,
  description: _react2.default.PropTypes.string,
  disabled: _react2.default.PropTypes.bool,
  id: _react2.default.PropTypes.string,
  labelOff: _react2.default.PropTypes.string,
  labelOn: _react2.default.PropTypes.string,
  name: _react2.default.PropTypes.string,
  onChange: _react2.default.PropTypes.func,
  textLeft: _react2.default.PropTypes.bool
};
Toggle.defaultProps = {
  labelOff: 'off',
  labelOn: 'on',
  textLeft: false
};

exports.default = (0, _fabricComponent2.default)(Toggle, _Toggle2.default);